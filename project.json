{
  "$schema": "node_modules/nx/schemas/project-schema.json",
  "name": "xm-webapp",
  "sourceRoot": "src",
  "prefix": "xm",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": [
        "{options.outputPath}"
      ],
      "options": {
        "outputPath": "dist",
        "index": "src/index.html",
        "main": "src/main.ts",
        "polyfills": "src/polyfills.ts",
        "tsConfig": "src/tsconfig.app.json",
        "assets": [
          "src/manifest.webmanifest",
          "src/assets",
          "src/i18n",
          "src/swagger-ui",
          "src/robots.txt",
          {
            "glob": "**/*",
            "input": "./node_modules/@kolkov/angular-editor/assets/",
            "output": "./assets/fonts/"
          },
          {
            "glob": "**/*",
            "input": "src/app/ext/example-webapp-ext/assets",
            "output": "/assets"
          }
        ],
        "styles": [
          "src/styles.scss"
        ],
        "scripts": [
          "node_modules/jquery/dist/jquery.js",
          "node_modules/popper.js/dist/umd/popper.js",
          "node_modules/bootstrap-material-design/dist/js/bootstrap-material-design.min.js",
          "node_modules/moment/moment.js",
          "node_modules/bootstrap-notify/bootstrap-notify.js",
          "node_modules/eonasdan-bootstrap-datetimepicker/src/js/bootstrap-datetimepicker.js",
          "node_modules/nouislider/dist/nouislider.min.js",
          "node_modules/bootstrap-select/dist/js/bootstrap-select.js",
          "node_modules/datatables/media/js/jquery.dataTables.js",
          "node_modules/datatables.net-bs/js/dataTables.bootstrap.js",
          "node_modules/datatables.net-responsive/js/dataTables.responsive.js",
          "node_modules/bootstrap-tagsinput-2021/dist/bootstrap-tagsinput.js",
          "node_modules/jvectormap/jquery-jvectormap.min.js",
          "node_modules/jvectormap/lib/jquery-mousewheel.js",
          "node_modules/jvectormap/tests/assets/jquery-jvectormap-map.js",
          "node_modules/jvectormap/tests/assets/jquery-jvectormap-world-mill-en.js",
          "node_modules/jquery-validation/dist/jquery.validate.min.js",
          "node_modules/leaflet/dist/leaflet.js",
          "node_modules/leaflet.gridlayer.googlemutant/dist/Leaflet.GoogleMutant.js",
          "node_modules/leaflet-draw/dist/leaflet.draw.js",
          "node_modules/oboe/dist/oboe-browser.js",
          "node_modules/yamljs/dist/yaml.js"
        ],
        "stylePreprocessorOptions": {
          "includePaths": [
            "src/styles",
            "src/app/ext",
            "node_modules"
          ]
        },
        "allowedCommonJsDependencies": [
          "moment-timezone",
          "moment",
          "lodash",
          "lodash/fp"
        ]
      },
      "configurations": {
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        },
        "production": {
          "fileReplacements": [
            {
              "replace": "src/environments/environment.ts",
              "with": "src/environments/environment.prod.ts"
            }
          ],
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": false,
          "extractLicenses": true,
          "vendorChunk": false,
          "buildOptimizer": true,
          "serviceWorker": true,
          "ngswConfigPath": "ngsw-config.json"
        },
        "serve-production": {
          "fileReplacements": [
            {
              "replace": "src/environments/environment.ts",
              "with": "src/environments/environment.local.ts"
            }
          ],
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": true,
          "namedChunks": true,
          "extractLicenses": true,
          "vendorChunk": true,
          "buildOptimizer": true
        },
        "idp": {
          "fileReplacements": [
            {
              "replace": "src/environments/environment.ts",
              "with": "src/environments/environment.idp.ts"
            }
          ]
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "options": {
        "buildTarget": "xm-webapp:build:development",
        "proxyConfig": "proxy.conf.js",
        "host": "0.0.0.0"
      },
      "configurations": {
        "development": {
          "buildTarget": "xm-webapp:build:development"
        },
        "production": {
          "buildTarget": "xm-webapp:build:production"
        },
        "serve-production": {
          "buildTarget": "xm-webapp:build:serve-production"
        },
        "idp": {
          "buildTarget": "xm-webapp:build:idp"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "buildTarget": "xm-webapp:build"
      }
    },
    "test": {
      "executor": "@angular-devkit/build-angular:karma",
      "options": {
        "main": "test.ts",
        "karmaConfig": "karma.conf.js",
        "polyfills": "src/polyfills.ts",
        "tsConfig": "tsconfig.spec.json",
        "scripts": [],
        "styles": [],
        "assets": []
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint"
    },
    "e2e": {
      "executor": "@nx/cypress:e2e",
      "options": {
        "cypressConfig": "cypress.config.ts",
        "testingType": "e2e",
        "devServerTarget": "xm-webapp:serve"
      },
      "configurations": {
        "production": {
          "devServerTarget": "xm-webapp:serve:production"
        }
      }
    },
    "storybook": {
      "executor": "@storybook/angular:start-storybook",
      "options": {
        "configDir": ".storybook",
        "buildTarget": "xm-webapp:build",
        "compodoc": true,
        "compodocArgs": [
          "-e",
          "json",
          "-d",
          "."
        ],
        "port": 6006
      }
    },
    "build-storybook": {
      "executor": "@storybook/angular:build-storybook",
      "options": {
        "configDir": ".storybook",
        "buildTarget": "xm-webapp:build",
        "compodoc": true,
        "compodocArgs": [
          "-e",
          "json",
          "-d",
          "."
        ],
        "outputDir": "storybook-static"
      }
    }
  }
}
